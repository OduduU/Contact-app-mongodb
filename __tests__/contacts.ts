import request from "supertest";

import app from "../src/app";
import { connect, disconnect } from "../scripts/mongo-setup";

beforeAll(connect);
afterAll(disconnect);

describe("Contact Spec", () => {
  test("it add a contact with a contact ID", async () => {
    const response = await request(app)
      .post("/contacts")
      .send({
        firstName: "Jane",
        phone: "+2348060123544"
      });

    expect(response.status).toBe(201);
    expect(response.body.data).toEqual(
      expect.objectContaining({
        _id: expect.any(String),
        id: expect.any(String),
        createdAt: expect.any(String),
        updatedAt: expect.any(String),
        firstName: "Jane",
        phone: "+2348060123544"
      })
    );
  });

  test("Query a contact that does not exist should result in error", async () => {
    const response = await request(app).get(
      "/contacts/5e34449293a6a62434960c03"
    );

    expect(response.status).toBe(404);
    expect(response.body).toEqual({ error: "Contact not found" });
  });
    
  test("Querying a contact with a non-objectid id results in an error", async () => {
    const response = await request(app).get(
      "/contacts/non-object"
    );

    expect(response.status).toBe(500);
  });

  it("Autogenerated fields should not be controlled by users", async () => {
    const contactDetail = {
      _id: "5e34449293a6a62434960c05",
      id: "2b98aa81-26c4-4bd3-8a65-dbedbe41a556",
      createdAt: "2020-01-21T10:49:00.000Z",
      updatedAt: "2020-01-21T10:49:00.000Z",
      firstName: "John",
      phone: "+234800000000"
    };

    const response = await request(app)
      .post("/contacts")
      .send(contactDetail);

    expect(response.status).toBe(201);

    expect(response.body.data.id).not.toBe(contactDetail.id);
    expect(response.body.data.createdAt).not.toBe(contactDetail.createdAt);
    expect(response.body.data.updatedAt).not.toBe(contactDetail.updatedAt);
  });

  test("Contact creation without required fileds should result in error", async () => {
    const response = await request(app)
      .post("/contact")
      .send({
        phone: "+2345589655441",
        email: "johndoe@example.com"
      });

    expect(response.status).toBe(500);
  });
});
